<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/all.min.css"
      integrity="sha256-mmgLkCYLUQbXn0B1SRqzHar6dCnv9oZFPEC1g1cwlkk="
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="css/style.css" />
    <title>ChatCord App</title>
  </head>
  <body>
    <div class="chat-container">
      <header class="chat-header">
        <h1><i class="fas fa-smile"></i> ChatCord</h1>
        <a href="index.html" class="btn">Leave Room</a>
      </header>
      <main class="chat-main">
        <div class="chat-sidebar">
          <h3><i class="fas fa-comments"></i> Room Name:</h3>
          <h2 id="room-name">JavaScript</h2>
          <h3><i class="fas fa-users"></i> Users</h3>
          <ul id="users">
            <li>Brad</li>
            <li>John</li>
            <li>Mary</li>
            <li>Paul</li>
            <li>Mike</li>
          </ul>
        </div>
        <div class="chat-messages"></div>
      </main>
      <div class="chat-form-container">
        <form id="chat-form">
          <input
            id="msg"
            type="text"
            placeholder="Enter Message"
            required
            autocomplete="off"
          />
          <button class="btn" id="sendButton">
            <i class="fas fa-paper-plane"></i> Send
          </button>
        </form>
        <button class="btn-btn" style="display: none">Speak</button>
        <button class="stop-btn" style="display: none">Stop</button>
        <p id="instructions"></p>
      </div>
    </div>

    <script
      src="https://code.jquery.com/jquery-3.5.1.min.js"
      integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/qs/6.9.6/qs.min.js"
      integrity="sha512-3TmPrquYLaAsUmZKXRARTDC5siWhLAdBVqNo4dWpDABBtLU62AaoTaQJEvjxjExcZYurO6i1dnK85k8pPIBlRg=="
      crossorigin="anonymous"
    ></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="js/main.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/annyang/2.6.1/annyang.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/SpeechKITT/0.3.0/speechkitt.min.js"></script>
    <script>
      var SpeechRecognition = window.webkitSpeechRecognition;

      var recognition = new SpeechRecognition();

      var Textbox = $("#msg");
      var instructions = $("#instructions");

      var Content = "";

      recognition.continuous = true;

      recognition.onresult = function (event) {
        var current = event.resultIndex;

        var transcript = event.results[current][0].transcript;

        Content += transcript;
        Textbox.val(Content);
      };

      recognition.onstart = function () {
        instructions.text("Voice recognition is ON.");
      };

      recognition.onspeechend = function () {
        instructions.text("No activity.");
      };

      recognition.onerror = function (event) {
        if (event.error == "no-speech") {
          instructions.text("Try again.");
        }
      };

      // $(".btn-btn").on("click", function (e) {
      //   if (Content.length) {
      //     Content += " ";
      //   }
      //   recognition.start();
      // });

      // $(".stop-btn").on("click", function (e) {
      //   document.getElementById("sendButton").click();
      //   Content = "";
      //   recognition.stop();
      // });

      Textbox.on("input", function () {
        Content = $(this).val();
      });

      // Voice Commands
      document.querySelector("body").addEventListener("keypress", myKeyPress);

      function myKeyPress(e) {
        var keynum;

        if (window.event) {
          // IE
          keynum = e.keyCode;
        } else if (e.which) {
          // Netscape/Firefox/Opera
          keynum = e.which;
        }

        if (keynum == 102) {
          if (annyang) {
            // Let's define a command.
            const commands = {
              "go to pdf": () => {
                window.open("/pdf", "_self");
              },
              "go to notes": () => {
                window.open("/notes", "_self");
              },
              "send *recording": () => {
                document.querySelector(".btn-btn").click();
                if (Content.length) {
                  Content += " ";
                }
                recognition.start();
                annyang.abort();
                SpeechKITT.annyang();
              },
              "stop *recording": () => {
                document.querySelector(".stop-btn").click();
                document.querySelector("#sendButton").click();
                Content = "";
                recognition.stop();
              },
              // "save *recording": () => {
              //   document.querySelector(".conformSave").click();
              //   console.log("save");
              //   annyang.abort();
              //   SpeechKITT.annyang();
              // },
              "logout *page": () => {
                window.open("/logout", "_self");
              },
              "go to home page": () => {
                window.open("/landing", "_self");
              },
              "read a book": () => {
                window.open("/pdfToText", "_self");
              },
            };

            //   Add our commands to annyang
            annyang.addCommands(commands);

            // Start listening.
            annyang.start();
            SpeechKITT.annyang();

            // Define a stylesheet for KITT to use
            SpeechKITT.setStylesheet(
              "//cdnjs.cloudflare.com/ajax/libs/SpeechKITT/0.3.0/themes/flat.css"
            );

            // Render KITT's interface
            SpeechKITT.vroom();
          }
        }
      }
    </script>
    <script></script>
  </body>
</html>
